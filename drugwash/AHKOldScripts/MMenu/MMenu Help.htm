<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0066)http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html -->
<HTML><HEAD><TITLE>MMenu</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252"><LINK 
href="MMenu Help_files/main.css" type=text/css rel=stylesheet>
<SCRIPT language=JavaScript src="MMenu Help_files/main.js"></SCRIPT>

<META content="MSHTML 6.00.2800.1607" name=GENERATOR></HEAD>
<BODY class=UnframedPage onload=NDOnLoad()>
<SCRIPT language=JavaScript><!--
if (browserType) {document.write("<div class=" + browserType + ">");if (browserVer) {document.write("<div class=" + browserVer + ">"); }}// --></SCRIPT>
<!--  Generated by Natural Docs, version 1.35 --><!--  http://www.naturaldocs.org  --><!-- saved from url=(0026)http://www.naturaldocs.org -->
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=MenuSection vAlign=top><!--START_ND_MENU-->
      <DIV class=MEntry>
      <DIV class=MFile id=MSelected>MMenu</DIV></DIV><!--END_ND_MENU--></TD>
    <TD class=ContentSection vAlign=top>
      <DIV class=CClass id=MainTopic>
      <DIV class=CTopic>
      <H1 class=CTitle><A name=MMenu></A>MMenu</H1>
      <DIV class=CBody>
      <P class=CParagraph>By majkinetor</P>
      <BLOCKQUOTE><PRE class=CCode></PRE></BLOCKQUOTE>
      <P class=CParagraph>MMenu is the replacement for the standard AutoHotKey 
      Menu command.&nbsp; Among other options, it alows menu items to have 
      icons, and solves limitation of standard menus about item identification – 
      besides title, which is nonreliable way to identify items, MMenu gives you 
      an option to identify menu items by ID or position.&nbsp; It gives you 
      full control over the menu you created, even while it is displayed.</P><!--START_ND_SUMMARY-->
      <DIV class=Summary>
      <DIV class=STitle>Summary</DIV>
      <DIV class=SBorder>
      <TABLE class=STable cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=SEntrySize>
            <DIV class=SMain>
            <DIV class=SEntry><A 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu">MMenu</A></DIV></DIV></TD>
          <TD class=SDescriptionSize>
            <DIV class=SMain>
            <DIV class=SDescription>By majkinetor</DIV></DIV></TD></TR>
        <TR class=SMarked>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link1 
            onmouseover="ShowTip(event, 'tt1', 'link1')" 
            onmouseout="HideTip('tt1')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Create">Create</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Creates new menu and sets its options. 
            </DIV></DIV></DIV></TD></TR>
        <TR>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link2 
            onmouseover="ShowTip(event, 'tt2', 'link2')" 
            onmouseout="HideTip('tt2')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Add">Add</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Adds a new menu item into the specified 
            menu.</DIV></DIV></DIV></TD></TR>
        <TR class=SMarked>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link3 
            onmouseover="ShowTip(event, 'tt3', 'link3')" 
            onmouseout="HideTip('tt3')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Remove">Remove</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Removes the item from the given menu and if item 
            opens the submenu, deattaches submenu. </DIV></DIV></DIV></TD></TR>
        <TR>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link4 
            onmouseover="ShowTip(event, 'tt4', 'link4')" 
            onmouseout="HideTip('tt4')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Set">Set</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Set item’s title and/or icon and/or options on 
            already crated items.</DIV></DIV></DIV></TD></TR>
        <TR class=SMarked>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link5 
            onmouseover="ShowTip(event, 'tt5', 'link5')" 
            onmouseout="HideTip('tt5')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Destroy">Destroy</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Destroy the menu and its submenus. 
            </DIV></DIV></DIV></TD></TR>
        <TR>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link6 
            onmouseover="ShowTip(event, 'tt6', 'link6')" 
            onmouseout="HideTip('tt6')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Count">Count</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Get the count of items in the 
            menu</DIV></DIV></DIV></TD></TR>
        <TR class=SMarked>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link7 
            onmouseover="ShowTip(event, 'tt7', 'link7')" 
            onmouseout="HideTip('tt7')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Hide">Hide</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Closes the currently opened 
            menu.</DIV></DIV></DIV></TD></TR>
        <TR>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link8 
            onmouseover="ShowTip(event, 'tt8', 'link8')" 
            onmouseout="HideTip('tt8')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Show">Show</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Show the menu on screen position X, 
            Y.</DIV></DIV></DIV></TD></TR>
        <TR class=SMarked>
          <TD>
            <DIV class=SFunction>
            <DIV class=SEntry>
            <DIV class=SIndent1><A id=link9 
            onmouseover="ShowTip(event, 'tt9', 'link9')" 
            onmouseout="HideTip('tt9')" 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.About">About</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SFunction>
            <DIV class=SDescription>
            <DIV class=SIndent1>Displays the message containing version and 
            other information.</DIV></DIV></DIV></TD></TR>
        <TR>
          <TD>
            <DIV class=SGroup>
            <DIV class=SEntry>
            <DIV class=SIndent1><A 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Notes">Notes</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SGroup>
            <DIV class=SDescription>
            <DIV class=SIndent1>MMenu is open source project and can be used 
            freely. </DIV></DIV></DIV></TD></TR>
        <TR>
          <TD>
            <DIV class=SGroup>
            <DIV class=SEntry>
            <DIV class=SIndent1><A 
            href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Examples">Examples</A></DIV></DIV></DIV></TD>
          <TD>
            <DIV class=SGroup>
            <DIV class=SDescription>
            <DIV class=SIndent1>Basic 
      usage</DIV></DIV></DIV></TD></TR></TBODY></TABLE></DIV></DIV><!--END_ND_SUMMARY--></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Create></A>Create</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>
              <TABLE cellSpacing=0 cellPadding=0 border=0>
                <TBODY>
                <TR>
                  <TD class=PBeforeParameters noWrap>MMenu_Create(</TD>
                  <TD class=PParameter noWrap>pOptions</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">""</TD>
                  <TD class=PAfterParameters 
          noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Creates new menu and sets its options.&nbsp; It 
      returns menu handle that is used in other menu functions.</P>
      <H4 class=CHeading>Parameters</H4>
      <P class=CParagraph>You can specify any combination of following options 
      (space separated):</P>
      <BLOCKQUOTE><PRE class=CCode></PRE></BLOCKQUOTE>
      <TABLE class=CDescriptionList cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=CDLEntry>s&lt;size&gt;</TD>
          <TD class=CDLDescription>size of the icons in this menu, default = 
          32</TD></TR>
        <TR>
          <TD class=CDLEntry>o&lt;num&gt;</TD>
          <TD class=CDLDescription>number of pixels to skip between icon and 
            the text, default = 0</TD></TR>
        <TR>
          <TD class=CDLEntry>c&lt;color&gt;</TD>
          <TD class=CDLDescription>background color of the menu, in 
            hexademical format, omit 0x</TD></TR>
        <TR>
          <TD class=CDLEntry>t&lt;color&gt;</TD>
          <TD class=CDLDescription>default text color</TD></TR>
        <TR>
          <TD class=CDLEntry>h&lt;height&gt;</TD>
          <TD class=CDLDescription>maximum height of the menu (does not work 
            with b option for menu items ,see below)</TD></TR></TBODY></TABLE>
      <H4 class=CHeading>Returns</H4>
      <P class=CParagraph>Menu handle</P>
      <H4 class=CHeading>Examples</H4>
      <BLOCKQUOTE><PRE class=CCode>;<BR>     myMenu := Menu_Create()              ;create with default options<BR>     myMenu := Menu_Create("S64 O20")     ;set icon size to 64 and offset to 20<BR>     myMenu := Menu_Create("C0 TFFFFFF")  ;set background color to black and text color to white</PRE></BLOCKQUOTE></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Add></A>Add</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>
              <TABLE cellSpacing=0 cellPadding=0 border=0>
                <TBODY>
                <TR>
                  <TD class=PBeforeParameters noWrap>MMenu_Add(</TD>
                  <TD class=PParameter noWrap>pMenu,</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
                  <TD class=PDefaultValue width="100%"></TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pTitle</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">"",</TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pIcon</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">"",</TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pItem</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">0,</TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pOptions</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">""</TD>
                  <TD class=PAfterParameters 
          noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Adds a new menu item into the specified menu.</P>
      <H4 class=CHeading>Parameters</H4>
      <TABLE class=CDescriptionList cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=CDLEntry>pMenu</TD>
          <TD class=CDLDescription>Menu handle returned by Create 
        function</TD></TR>
        <TR>
          <TD class=CDLEntry>pTitle</TD>
          <TD class=CDLDescription>Optional title of the menu item</TD></TR>
        <TR>
          <TD class=CDLEntry>pIcon</TD>
          <TD class=CDLDescription>Optional path to the icon for the item; if 
            you set the number, it will be seen as the icon handle.&nbsp; You 
            can use 32x32 icons from resources if you specify :idx after icon 
            path ( shell32.dll:4 )</TD></TR>
        <TR>
          <TD class=CDLEntry>pItem</TD>
          <TD class=CDLDescription>One of the 3 methods to identify the menu 
            item.&nbsp; See item identification bellow.&nbsp; If number, 
            position for the new item, default = 0 means that item will be 
            appended.&nbsp; If name, new item will be inserted before the item 
            referenced by that name.</TD></TR>
        <TR>
          <TD class=CDLEntry>pOptions</TD>
          <TD class=CDLDescription>Options for the menu item, see 
        bellow</TD></TR></TBODY></TABLE>
      <H4 class=CHeading>Options</H4>
      <TABLE class=CDescriptionList cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=CDLEntry>i&lt;num&gt;</TD>
          <TD class=CDLDescription>menu item ID specified by the syntax of the 
            Autohotkey variable name.</TD></TR>
        <TR>
          <TD class=CDLEntry>s</TD>
          <TD class=CDLDescription>item is separator; omiting all optional 
            parameters has the same effect</TD></TR>
        <TR>
          <TD class=CDLEntry>m&lt;handle&gt;</TD>
          <TD class=CDLDescription>item is submenu and will open the menu with 
            given handle</TD></TR>
        <TR>
          <TD class=CDLEntry>g</TD>
          <TD class=CDLDescription>item is disabled (grayed)</TD></TR>
        <TR>
          <TD class=CDLEntry>c</TD>
          <TD class=CDLDescription>item is checked</TD></TR>
        <TR>
          <TD class=CDLEntry>b [|]</TD>
          <TD class=CDLDescription>horizontaly break menu at this item’s 
            position; to draw a line between the break item and next menu part, 
            set b|</TD></TR>
        <TR>
          <TD class=CDLEntry>d</TD>
          <TD class=CDLDescription>use bold fonts for the item</TD></TR>
        <TR>
          <TD class=CDLEntry>t</TD>
          <TD class=CDLDescription>text color to use for the item, otherwise, 
            use default text color specified with Create’s T 
        parameter</TD></TR></TBODY></TABLE>
      <H4 class=CHeading>Returns</H4>
      <P class=CParagraph>false if there was an error</P>
      <H4 class=CHeading>Item identification</H4>
      <P class=CParagraph>There are 3 methods to identify the item – by ID, by 
      1-based position and by title.&nbsp; You can use anything that is more 
      appropriate in your scripting environment.&nbsp; All of MMenu functions 
      dealing with items have item parameter that you use to point on specific 
      menu item.&nbsp; If you set item to be positive number, it will be seen as 
      a position.&nbsp; If you pass string instead of number, it will be seen as 
      as item ID.&nbsp; Item ID is any vaild Autohotkey name that you associate 
      with item when you add it to the menu.&nbsp; If you set the ID to the 
      already existing, you will remove ID of the item previously associated 
      with it.&nbsp; Item ID is unique acros all menus that you create.&nbsp; If 
      item ends with A_SPACE, it will be seen as items title without ending 
      space (the reason for this is that valid item ID’s can not have 
      space).&nbsp; As you can have more items with the same title, this will 
      return the one with lowest position in the menu.</P>
      <BLOCKQUOTE><PRE class=CCode>;<BR>             1         - identifies the item at position 1<BR>          "myItem"     - identifies the item with ID=myItem<BR>          "myItem "    - identifies the item with Title=myItem</PRE></BLOCKQUOTE>
      <H4 class=CHeading>Examples</H4>
      <BLOCKQUOTE><PRE class=CCode>;<BR>       Menu_Add( myMenu, "title 1")                    ;append item, set the title<BR>       Menu_Add( myMenu, "title 2", "icons\item.ico")  ;append item, set the title and icon<BR>       Menu_Add( myMenu, "title 3", "", 3)             ;add item without icon on third position<BR>       Menu_Add( myMenu, "title 4", "", , "imyItem c") ;append item with ID=myItem, set its title and check it<BR>       Menu_Add( myMenu, "title 5", "", "myItem")      ;add item without icon before item with ID=myItem<BR>       Menu_Add( myMenu )                              ;append separator<BR><BR>       mySubMenu := Menu_Create()<BR>       Menu_Add( myMenu, "My Submenu", "icons\submenu.ico", 2, "M" mySubMenu) ;add submenu on second position</PRE></BLOCKQUOTE></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Remove></A>Remove</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>
              <TABLE cellSpacing=0 cellPadding=0 border=0>
                <TBODY>
                <TR>
                  <TD class=PBeforeParameters noWrap>MMenu_Remove(</TD>
                  <TD class=PParameter noWrap>pMenu,</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pItem</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PAfterParameters 
          noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Removes the item from the given menu and if item opens 
      the submenu, deattaches submenu.&nbsp; If you specify item by title, the 
      item with the lowest position with that title will be removed.</P>
      <H4 class=CHeading>Parameters</H4>
      <TABLE class=CDescriptionList cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=CDLEntry>pMenu</TD>
          <TD class=CDLDescription>menu that holds the item to be 
removed</TD></TR>
        <TR>
          <TD class=CDLEntry>pItem</TD>
          <TD class=CDLDescription>one of the 3 methods to identify the 
        item</TD></TR></TBODY></TABLE>
      <H4 class=CHeading>Returns</H4>
      <P class=CParagraph>true on success, false if error occured</P>
      <H4 class=CHeading>Note</H4>
      <P class=CParagraph>If you want to remove the item using its title as 
      identification you must A_SPACE at the end of it.</P>
      <P class=CParagraph>Without space it will be understood as item ID or item 
      position, depending on title value</P>
      <BLOCKQUOTE><PRE class=CCode>;<BR>      Menu_Remove(main, "1")         ;remove the item with position=1<BR>      Menu_Remove(main, "1 ")        ;remove the item with title=1</PRE></BLOCKQUOTE></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Set></A>Set</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>
              <TABLE cellSpacing=0 cellPadding=0 border=0>
                <TBODY>
                <TR>
                  <TD class=PBeforeParameters noWrap>MMenu_Set(</TD>
                  <TD class=PParameter noWrap>pMenu,</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
                  <TD class=PDefaultValue width="100%"></TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pItem,</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
                  <TD class=PDefaultValue width="100%"></TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pTitle</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">"",</TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pIcon</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">"",</TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pOptions</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">""</TD>
                  <TD class=PAfterParameters 
          noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Set item’s title and/or icon and/or options on already 
      crated items.</P>
      <H4 class=CHeading>Parameters</H4>
      <TABLE class=CDescriptionList cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=CDLEntry>pMenu</TD>
          <TD class=CDLDescription>Handle of the menu containing the 
item</TD></TR>
        <TR>
          <TD class=CDLEntry>pItem</TD>
          <TD class=CDLDescription>Item identifier, the same rules as in 
            Remove function (ID, position or title)</TD></TR>
        <TR>
          <TD class=CDLEntry>pTitle</TD>
          <TD class=CDLDescription>New title</TD></TR>
        <TR>
          <TD class=CDLEntry>pIcon</TD>
          <TD class=CDLDescription>New icon</TD></TR>
        <TR>
          <TD class=CDLEntry>pOptions</TD>
          <TD class=CDLDescription>the same as in Add 
      function</TD></TR></TBODY></TABLE>
      <H4 class=CHeading>Notes</H4>
      <P class=CParagraph>If you want to remove title or icon use A_SPACE 
      instead of empty string.</P>
      <P class=CParagraph>Use the empty string to leave the option 
untouched.</P>
      <P class=CParagraph>To unset the flag option, use – in front of it (-c –b 
      –m -g). d option can not be unset.</P>
      <H4 class=CHeading>Examples</H4>
      <BLOCKQUOTE><PRE class=CCode>Menu_Set( myMenu, 1,            "new title","","i33" )      ;change the title and ID of first item<BR>Menu_Set( myMenu, "new title ", "", A_SPACE ,"c" )          ;check the first item with title"new title", and remove icon<BR>Menu_Set( myMenu, "i101",       "","disabled.ico","g -c" )  ;gray and uncheck item with ID=i101 and change its icon</PRE></BLOCKQUOTE></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Destroy></A>Destroy</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>
              <TABLE cellSpacing=0 cellPadding=0 border=0>
                <TBODY>
                <TR>
                  <TD class=PBeforeParameters noWrap>MMenu_Destroy(</TD>
                  <TD class=PParameter noWrap>pMenu</TD>
                  <TD class=PAfterParameters 
          noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Destroy the menu and its submenus.&nbsp; Submenus are 
      destroyed recursively.</P>
      <P class=CParagraph>If you don’t want to destroy submenus first deattach 
      them with <A class=LFunction id=link10 
      onmouseover="ShowTip(event, 'tt3', 'link10')" onmouseout="HideTip('tt3')" 
      href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Remove">MMenu.Remove</A> 
      function or use <A class=LFunction id=link11 
      onmouseover="ShowTip(event, 'tt4', 'link11')" onmouseout="HideTip('tt4')" 
      href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#MMenu.Set">MMenu.Set</A> 
      with an -m option.</P>
      <H4 class=CHeading>Parameters</H4>
      <TABLE class=CDescriptionList cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=CDLEntry>pMenu</TD>
          <TD class=CDLDescription>Menu handle of the menu you want to 
          destroy</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Count></A>Count</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>
              <TABLE cellSpacing=0 cellPadding=0 border=0>
                <TBODY>
                <TR>
                  <TD class=PBeforeParameters noWrap>MMenu_Count(</TD>
                  <TD class=PParameter noWrap>pMenu</TD>
                  <TD class=PAfterParameters 
          noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Get the count of items in the menu</P>
      <P class=CParagraph>Parameters : pMenu - Menu handle</P>
      <H4 class=CHeading>Returns</H4>
      <P class=CParagraph>Item count</P></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Hide></A>Hide</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>MMenu_Hide()</TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Closes the currently opened menu.</P>
      <H4 class=CHeading>Examples</H4>
      <P class=CParagraph>To show the context menu for the menu item when it is 
      right clicked you can set up things like this:</P>
      <BLOCKQUOTE><PRE class=CCode>;<BR>      mainMenu  := MMenu_Create(),  contextMenu  := MMenu_Create()<BR>      ...<BR>      Mmenu_Show( mainMenu, 0, 0, “OnMainMenuClick, “ROnMainRightClick”)<BR>      ...<BR><BR>      OnMainRightClick:<BR>          MMenu_GetPosition(M_MENU, cX, cY, true)      ;get coordinates of clicked item<BR>          MMenu_Hide()<BR>          SetTimer, LaunchContextMenu, 50          ;allow mmenu to close (show function to return)<BR>      Return<BR><BR>      LaunchContextMenu:<BR>          SetTimer, LaunchContextMenu, off<BR>          MMenu_Show(contextMenu, cX, cY, "OnContextMenuClick")<BR>      Return</PRE></BLOCKQUOTE></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Show></A>Show</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>
              <TABLE cellSpacing=0 cellPadding=0 border=0>
                <TBODY>
                <TR>
                  <TD class=PBeforeParameters noWrap>MMenu_Show(</TD>
                  <TD class=PParameter noWrap>pMenu,</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
                  <TD class=PDefaultValue width="100%"></TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pX,</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
                  <TD class=PDefaultValue width="100%"></TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pY,</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
                  <TD class=PDefaultValue width="100%"></TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pOnClick,</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
                  <TD class=PDefaultValue width="100%"></TD></TR>
                <TR>
                  <TD></TD>
                  <TD class=PParameter noWrap>pHandlers</TD>
                  <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
                  <TD class=PDefaultValue width="100%">""</TD>
                  <TD class=PAfterParameters 
          noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Show the menu on screen position X, Y.</P>
      <P class=CParagraph>You can not call Show function while it is already 
      running.</P>
      <H4 class=CHeading>Parameters</H4>
      <TABLE class=CDescriptionList cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=CDLEntry>pMenu</TD>
          <TD class=CDLDescription>Handle of the menu to be shown</TD></TR>
        <TR>
          <TD class=CDLEntry>pX, pY</TD>
          <TD class=CDLDescription>Screen coordinates where the menu will be 
            shown.&nbsp; Menu will reposition itself if it can not fit the 
            screen.</TD></TR>
        <TR>
          <TD class=CDLEntry>pOnClick</TD>
          <TD class=CDLDescription>User soubroutine that will be called upon 
            item selection.&nbsp; M_MENU, M_TITLE and M_ID global variables will 
            contain the information about selected item</TD></TR>
        <TR>
          <TD class=CDLEntry>pHandlers</TD>
          <TD class=CDLDescription>String containing optional user 
            soubroutines that will be called upon certain event.&nbsp; See 
          below.</TD></TR></TBODY></TABLE>
      <H4 class=CHeading>Events</H4>
      <TABLE class=CDescriptionList cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD class=CDLEntry>S</TD>
          <TD class=CDLDescription>This notificiation is received when user 
            selects the menu item.&nbsp; Sets M_SMENU, M_STITLE, M_SID</TD></TR>
        <TR>
          <TD class=CDLEntry>I</TD>
          <TD class=CDLDescription>The menu is going to be shown.&nbsp; 
            (initialise).&nbsp; Sets M_MENU</TD></TR>
        <TR>
          <TD class=CDLEntry>U</TD>
          <TD class=CDLDescription>The menu is going to be closed 
            (uninitialise).&nbsp; Sets M_MENU</TD></TR>
        <TR>
          <TD class=CDLEntry>R</TD>
          <TD class=CDLDescription>The menu item was right clicked.&nbsp; Sets 
            M_MENU, M_TITLE, M_ID</TD></TR>
        <TR>
          <TD class=CDLEntry>M</TD>
          <TD class=CDLDescription>The menu item was middle clicked.&nbsp; 
            Sets M_MENU, M_TITLE, M_ID</TD></TR>
        <TR>
          <TD class=CDLEntry>C</TD>
          <TD class=CDLDescription>The menu has received character 
            input.&nbsp; Sets M_CMENU, M_CHAR.&nbsp; It Doesn’t report ampersend 
            keys, like “t” in “i&amp;tem” as that one will select item or open 
            submenu.</TD></TR></TBODY></TABLE>
      <H4 class=CHeading>Example</H4>
      <BLOCKQUOTE><PRE class=CCode>&nbsp;<BR>      MMenu_Show( mainMenu, X, Y, "OnClick", "SOnSelect UOnUninit")<BR>      ...<BR><BR>      OnSelect:<BR>             MMenu_GetPosition(M_SMENU, X, Y)    ; get the position of the currently open menu<BR>             msg := aMyTooltips%M_SID%           ; aMyTooltips is array containing tooltips for eatch item<BR>             Tooltip, %msg%, % X + 5, % Y – 30   ; and display tooltip above the current menu<BR>      Return<BR><BR>      OnUninit:<BR>             Tooltip  ;close the tooltip when the (sub)menu closes<BR>      Return</PRE></BLOCKQUOTE></DIV></DIV></DIV>
      <DIV class=CFunction>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.About></A>About</H3>
      <DIV class=CBody>
      <BLOCKQUOTE>
        <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD>MMenu_About()</TD></TR></TBODY></TABLE></BLOCKQUOTE>
      <P class=CParagraph>Displays the message containing version and other 
      information.</P></DIV></DIV></DIV>
      <DIV class=CGroup>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Notes></A>Notes</H3>
      <DIV class=CBody>
      <P class=CParagraph>MMenu is open source project and can be used 
      freely.&nbsp; However, if you use MMenu, provide appropriate credits in 
      your documentation.&nbsp; One of the ways is to put the button in your 
      about window that will launch About function.</P>
      <BLOCKQUOTE><PRE class=CCode></PRE></BLOCKQUOTE>
      <P class=CParagraph>Feel free to send me comments and bug reports.</P>
      <H4 class=CHeading>Created by</H4>
      <P class=CParagraph>Miodrag Milic <A class=LEMail 
      onclick="location.href='mai' + 'lto:' + 'miodra' + 'g.milic' + '@' + 'gmai' + 'l.com'; return false;" 
      href="http://www.r-moth.com/code/AHK/MMenu/files/includes/MMenu-ahk.html#">miodra<SPAN 
      style="DISPLAY: none">.nosp@m.</SPAN>g.milic<SPAN>@</SPAN>gmai<SPAN 
      style="DISPLAY: none">.nosp@m.</SPAN>l.com</A></P></DIV></DIV></DIV>
      <DIV class=CGroup>
      <DIV class=CTopic>
      <H3 class=CTitle><A name=MMenu.Examples></A>Examples</H3>
      <DIV class=CBody>
      <P class=CParagraph>Basic usage</P>
      <BLOCKQUOTE><PRE class=CCode>;<BR>     myMenu := MMenu_Create(),  mySubMenu := MMenu_Create()<BR><BR>     s = %A_WinDir%\System32\Shell32.dll<BR>     MMenu_Add(myMenu,"CD-ROM",       s ":" 190, 0, "iv101 d")<BR>     MMenu_Add(myMenu,"Recycle Bin",  s ":" 145, 0, "iv102 c")<BR>     MMenu_Add(myMenu)<BR>     MMenu_Add(myMenu,"Drives",       s ":" 3,   0, "iv103 m" . mySubMenu)<BR><BR>     MMenu_Add(mySubMenu,"c:\",       s ":"8)<BR>     MMenu_Add(mySubMenu,"d:\",       s ":"8)<BR>     MMenu_Add(mySubMenu,"network",   s ":" 9,   0, "g")<BR><BR>     MouseGetPos, x, y<BR>     MMenu_Show(myMenu, x, y, "OnItemClick")<BR> Return<BR><BR> OnItemClick:<BR>     s :="myMenu"<BR>     If (M_MENU = mySubMenu)<BR>     s :="mySubMenu"<BR>     MsgBox, Menu: %s%`nItem: %M_TITLE% (ID=%M_ID%)<BR> Return</PRE></BLOCKQUOTE></DIV></DIV></DIV></TD></TR></TBODY></TABLE>
<DIV class=Footer><!--START_ND_FOOTER-->Generated by <A 
href="http://www.naturaldocs.org/">Natural Docs</A><!--END_ND_FOOTER--></DIV><!--START_ND_TOOLTIPS-->
<DIV class=CToolTip id=tt1>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>
        <TABLE cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD class=PBeforeParameters noWrap>MMenu_Create(</TD>
            <TD class=PParameter noWrap>pOptions</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">""</TD>
            <TD class=PAfterParameters 
    noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>Creates 
new menu and sets its options. </DIV></DIV>
<DIV class=CToolTip id=tt2>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>
        <TABLE cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD class=PBeforeParameters noWrap>MMenu_Add(</TD>
            <TD class=PParameter noWrap>pMenu,</TD>
            <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
            <TD class=PDefaultValue width="100%"></TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pTitle</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">"",</TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pIcon</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">"",</TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pItem</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">0,</TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pOptions</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">""</TD>
            <TD class=PAfterParameters 
    noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>Adds a 
new menu item into the specified menu.</DIV></DIV>
<DIV class=CToolTip id=tt3>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>
        <TABLE cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD class=PBeforeParameters noWrap>MMenu_Remove(</TD>
            <TD class=PParameter noWrap>pMenu,</TD>
            <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pItem</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PAfterParameters 
    noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>Removes 
the item from the given menu and if item opens the submenu, deattaches submenu. 
</DIV></DIV>
<DIV class=CToolTip id=tt4>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>
        <TABLE cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD class=PBeforeParameters noWrap>MMenu_Set(</TD>
            <TD class=PParameter noWrap>pMenu,</TD>
            <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
            <TD class=PDefaultValue width="100%"></TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pItem,</TD>
            <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
            <TD class=PDefaultValue width="100%"></TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pTitle</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">"",</TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pIcon</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">"",</TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pOptions</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">""</TD>
            <TD class=PAfterParameters 
    noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>Set 
item’s title and/or icon and/or options on already crated items.</DIV></DIV>
<DIV class=CToolTip id=tt5>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>
        <TABLE cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD class=PBeforeParameters noWrap>MMenu_Destroy(</TD>
            <TD class=PParameter noWrap>pMenu</TD>
            <TD class=PAfterParameters 
    noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>Destroy 
the menu and its submenus. </DIV></DIV>
<DIV class=CToolTip id=tt6>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>
        <TABLE cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD class=PBeforeParameters noWrap>MMenu_Count(</TD>
            <TD class=PParameter noWrap>pMenu</TD>
            <TD class=PAfterParameters 
    noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>Get the 
count of items in the menu</DIV></DIV>
<DIV class=CToolTip id=tt7>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>MMenu_Hide()</TD></TR></TBODY></TABLE></BLOCKQUOTE>Closes the currently 
opened menu.</DIV></DIV>
<DIV class=CToolTip id=tt8>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>
        <TABLE cellSpacing=0 cellPadding=0 border=0>
          <TBODY>
          <TR>
            <TD class=PBeforeParameters noWrap>MMenu_Show(</TD>
            <TD class=PParameter noWrap>pMenu,</TD>
            <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
            <TD class=PDefaultValue width="100%"></TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pX,</TD>
            <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
            <TD class=PDefaultValue width="100%"></TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pY,</TD>
            <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
            <TD class=PDefaultValue width="100%"></TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pOnClick,</TD>
            <TD class=PDefaultValuePrefix>&nbsp;&nbsp;</TD>
            <TD class=PDefaultValue width="100%"></TD></TR>
          <TR>
            <TD></TD>
            <TD class=PParameter noWrap>pHandlers</TD>
            <TD class=PDefaultValuePrefix>&nbsp;=&nbsp;</TD>
            <TD class=PDefaultValue width="100%">""</TD>
            <TD class=PAfterParameters 
    noWrap>)</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BLOCKQUOTE>Show 
the menu on screen position X, Y.</DIV></DIV>
<DIV class=CToolTip id=tt9>
<DIV class=CFunction>
<BLOCKQUOTE>
  <TABLE class=Prototype cellSpacing=0 cellPadding=0 border=0>
    <TBODY>
    <TR>
      <TD>MMenu_About()</TD></TR></TBODY></TABLE></BLOCKQUOTE>Displays the message 
containing version and other information.</DIV></DIV><!--END_ND_TOOLTIPS-->
<SCRIPT language=JavaScript><!--
if (browserType) {if (browserVer) {document.write("</div>"); }document.write("</div>");}// --></SCRIPT>
</BODY></HTML>
